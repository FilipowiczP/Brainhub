{"version":3,"sources":["components/from/Form.tsx","components/table/Table.tsx","components/tableBody/TableBody.tsx","App.tsx","reportWebVitals.ts","index.tsx","styles/form.module.scss"],"names":["Form","uptade","useState","firstName","lastName","email","eventDate","Date","formValue","setformValue","form","validation","setValidation","useEffect","length","handleSubmit","event","a","preventDefault","fetch","method","mode","headers","body","JSON","stringify","newEvent","json","onSubmit","Alert","severity","TextField","required","className","style","input","id","label","variant","value","onChange","target","type","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","newValue","renderInput","params","Button","StyledTableCell","withStyles","theme","createStyles","head","backgroundColor","palette","common","black","color","white","fontSize","TableCell","useStyles","makeStyles","table","minWidth","TableOfEvents","props","classes","TableContainer","component","Paper","Table","TableHead","TableRow","align","children","StyledTableRow","root","action","hover","TableBody","App","data","setData","setUptade","then","response","reverse","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.5dc72185.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n//    === COMPONENTS ===\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Button from \"@mui/material/Button\";\r\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\r\nimport LocalizationProvider from \"@mui/lab/LocalizationProvider\";\r\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nimport style from \"../../styles/form.module.scss\";\r\n\r\ninterface StateObject {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  eventDate: Date | null;\r\n}\r\n\r\ninterface Validation {\r\n  form: boolean;\r\n  firstName: boolean;\r\n  lastName: boolean;\r\n}\r\n\r\nconst Form = ({ uptade }: any) => {\r\n  const [formValue, setformValue] = useState<StateObject>({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    eventDate: new Date(\"2021-01-01\"),\r\n  });\r\n  const [validation, setValidation] = useState<Validation>({\r\n    form: false,\r\n    firstName: false,\r\n    lastName: false,\r\n  });\r\n\r\n  //    === CHANGE DATE ===\r\n  const handleDate = (newValue: Date | null) => {\r\n    setformValue({ ...formValue, eventDate: newValue });\r\n  };\r\n\r\n  //    === VALIDATION ===\r\n  useEffect(() => {\r\n    if (formValue.firstName.length < 4 && formValue.lastName.length < 4) {\r\n      setValidation({ form: true, firstName: true, lastName: true });\r\n    } else if (\r\n      formValue.firstName.length < 4 &&\r\n      formValue.lastName.length >= 3\r\n    ) {\r\n      setValidation({ form: true, firstName: true, lastName: false });\r\n    } else if (\r\n      formValue.firstName.length >= 3 &&\r\n      formValue.lastName.length < 4\r\n    ) {\r\n      setValidation({ form: true, firstName: false, lastName: true });\r\n    } else {\r\n      setValidation({ form: false, firstName: false, lastName: false });\r\n    }\r\n  }, [formValue]);\r\n\r\n  //    === POST NEW EVENT ===\r\n  const handleSubmit = async (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    if (validation.form === false) {\r\n      const newEvent = await fetch(\"http://localhost:5000/event\", {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formValue),\r\n      });\r\n\r\n      uptade();\r\n\r\n      setformValue({\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        eventDate: new Date(\"2021-01-01\"),\r\n      });\r\n\r\n      return newEvent.json();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(event: React.FormEvent<HTMLFormElement>) =>\r\n        handleSubmit(event)\r\n      }\r\n    >\r\n      {validation.form && (\r\n        <Alert severity=\"error\">You have to correct form</Alert>\r\n      )}\r\n      {validation.firstName && (\r\n        <Alert severity=\"error\">Too short first name</Alert>\r\n      )}\r\n      <TextField\r\n        required\r\n        className={style.input}\r\n        id=\"outlined-basic\"\r\n        label=\"First name\"\r\n        variant=\"outlined\"\r\n        value={formValue.firstName}\r\n        onChange={(event: any) =>\r\n          setformValue({ ...formValue, firstName: event.target.value })\r\n        }\r\n      />\r\n      {validation.lastName && (\r\n        <Alert severity=\"error\">Too short last name</Alert>\r\n      )}\r\n      <TextField\r\n        required\r\n        className={style.input}\r\n        id=\"outlined-basic\"\r\n        label=\"Last name\"\r\n        variant=\"outlined\"\r\n        value={formValue.lastName}\r\n        onChange={(event: any) =>\r\n          setformValue({ ...formValue, lastName: event.target.value })\r\n        }\r\n      />\r\n      <TextField\r\n        required\r\n        className={style.input}\r\n        type=\"email\"\r\n        id=\"outlined-basic\"\r\n        label=\"Email\"\r\n        variant=\"outlined\"\r\n        value={formValue.email}\r\n        onChange={(event: any) =>\r\n          setformValue({ ...formValue, email: event.target.value })\r\n        }\r\n      />\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        <DesktopDatePicker\r\n          label=\"Data urodzenia\"\r\n          inputFormat=\"MM/dd/yyyy\"\r\n          value={formValue.eventDate}\r\n          onChange={handleDate}\r\n          renderInput={(params) => (\r\n            <TextField className={style.input} {...params} />\r\n          )}\r\n        />\r\n      </LocalizationProvider>\r\n\r\n      <Button variant=\"contained\" type=\"submit\">\r\n        Add new event\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\n//   --- COMPONENTS ---\r\nimport {\r\n  withStyles,\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//   --- STYLES ---\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  })\r\n)(TableCell);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\ninterface LayoutProps {\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst TableOfEvents = (props: LayoutProps) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"center\">First name</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Last name</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Email</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Date</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>{props.children}</TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TableOfEvents;\r\n","//    === COMPONENTS ===\r\nimport { withStyles, Theme, createStyles } from \"@material-ui/core/styles\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\n//    === STYLES ===\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  })\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  })\r\n)(TableRow);\r\n\r\ninterface Data {\r\n  firstName: String;\r\n  lastName: String;\r\n  email: String;\r\n  eventDate: Date | String;\r\n}\r\n\r\nconst TableBody = ({ firstName, lastName, email, eventDate }: Data) => {\r\n  return (\r\n    <StyledTableRow>\r\n      <StyledTableCell data-testid=\"firstName\" align=\"center\">\r\n        {firstName}\r\n      </StyledTableCell>\r\n      <StyledTableCell data-testid=\"lastName\" align=\"center\">\r\n        {lastName}\r\n      </StyledTableCell>\r\n      <StyledTableCell data-testid=\"email\" align=\"center\">\r\n        {email}\r\n      </StyledTableCell>\r\n      <StyledTableCell data-testid=\"date\" align=\"center\">\r\n        {eventDate}\r\n      </StyledTableCell>\r\n    </StyledTableRow>\r\n  );\r\n};\r\n\r\nexport default TableBody;\r\n","import { useEffect, useState } from \"react\";\nimport Form from \"./components/from/Form\";\nimport Table from \"./components/table/Table\";\nimport TableBody from \"./components/tableBody/TableBody\";\n\ninterface Data {\n  firstName: String;\n  lastName: String;\n  email: String;\n  eventDate: Date;\n}\n\nfunction App() {\n  const [data, setData] = useState<Array<Data>>([]);\n  const [uptade, setUptade] = useState<Boolean>(false);\n\n  const uptadeEvents = () => {\n    setUptade(!uptade);\n  };\n\n  //    === GET ALL EVENTS FROM DATABASE ===\n  useEffect(() => {\n    fetch(\"http://localhost:5000/event\")\n      .then((response) => response.json())\n      .then((data) => {\n        setData(data.reverse());\n      });\n  }, []);\n\n  //    === UPTADE ALL EVENTS FROM DATABASE ===\n  useEffect(() => {\n    fetch(\"http://localhost:5000/event\")\n      .then((response) => response.json())\n      .then((data) => setData(data.reverse()));\n  }, [uptade]);\n\n  return (\n    <main>\n      <Form uptade={uptadeEvents} />\n      <Table>\n        {data === [] ? (\n          <h2>Loading...</h2>\n        ) : (\n          data.map(({ firstName, lastName, email, eventDate }: Data) => {\n            return (\n              <TableBody\n                firstName={firstName}\n                lastName={lastName}\n                email={email}\n                eventDate={eventDate}\n              />\n            );\n          })\n        )}\n      </Table>\n    </main>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"form_input__j7Xp_\"};"],"sourceRoot":""}